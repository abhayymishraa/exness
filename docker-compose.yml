services:
  web:
    container_name: web
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - exness-network
    depends_on:
      - backend
      - ws

  backend:
    container_name: backend
    build:
      context: ./http_server
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:5000:5000"
    networks:
      - exness-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  poller:
    container_name: poller
    build:
      context: ./price_poller
      dockerfile: Dockerfile
    networks:
      - exness-network
    volumes:
      - ./price_poller:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  ws:
    container_name: ws
    build:
      context: ./ws
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - exness-network
    volumes:
      - ./ws:/app
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  redis:
    container_name: redis_service
    image: redis:7.2.7-alpine3.21
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    command: ["redis-server"]
    networks:
      - exness-network
    volumes:
      - redis-cache:/data

  db:
    container_name: timescale_db
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_PASSWORD=${DJANGO_DB_PASS:-XYZ@123}
      - POSTGRES_USER=${DJANGO_DB_USER:-user}
      - POSTGRES_DB=${DJANGO_DB_NAME:-trades_db}
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      interval: 5s
      retries: 5
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DJANGO_DB_USER:-user} -d ${DJANGO_DB_NAME:-trades_db}",
        ]
      timeout: 5s
    networks:
      - exness-network
    tmpfs: /var/lib/postgresql/data

networks:
  exness-network:

volumes:
  redis-cache:
